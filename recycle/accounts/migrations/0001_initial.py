# Generated by Django 4.2 on 2024-02-19 10:09

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="APILog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_method", models.CharField(max_length=10)),
                ("request_path", models.CharField(max_length=255)),
                ("request_headers", models.TextField()),
                ("request_body", models.TextField()),
                ("request_data", models.TextField()),
                ("response_status", models.IntegerField(default=200, null=True)),
                ("response_body", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be 10 digits only.",
                                regex="^\\d{10}",
                            )
                        ],
                    ),
                ),
                ("name", models.CharField(max_length=255, null=True)),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                ("otp", models.CharField(max_length=6)),
                ("otp_expiry", models.DateTimeField(blank=True, null=True)),
                ("max_otp_try", models.CharField(default=5, max_length=2)),
                ("otp_max_out", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("user_registered_at", models.DateTimeField(auto_now_add=True)),
                ("is_vendor", models.BooleanField(default=False)),
                (
                    "vendor_status",
                    models.CharField(
                        choices=[
                            ("allocated", "Allocated"),
                            ("not_allocated", "Not Allocated"),
                        ],
                        default="not_allocated",
                        max_length=100,
                    ),
                ),
                ("pincode", models.CharField(max_length=6, null=True)),
                ("upiId", models.TextField(blank=True, null=True)),
                ("pickup_otp", models.CharField(blank=True, max_length=4, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
    ]
